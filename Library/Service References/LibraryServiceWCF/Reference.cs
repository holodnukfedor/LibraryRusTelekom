//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.LibraryServiceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HasErrorAndRowCountFieldAnswer", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.BookDTOList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.UserBookDtoList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.AbonentDTOList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.DomainListDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.PublisherDTOList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.AuthorDTOList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Library.LibraryServiceWCF.ReportBookPopularityDto))]
    public partial class HasErrorAndRowCountFieldAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllRowsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllRowsCount {
            get {
                return this.AllRowsCountField;
            }
            set {
                if ((this.AllRowsCountField.Equals(value) != true)) {
                    this.AllRowsCountField = value;
                    this.RaisePropertyChanged("AllRowsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTOList", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class BookDTOList : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.BookDTO> BooksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.BookDTO> Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBookDtoList", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class UserBookDtoList : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.UserBookDTO> BooksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.UserBookDTO> Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbonentDTOList", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class AbonentDTOList : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AbonentDTO> AbonentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AbonentDTO> Abonents {
            get {
                return this.AbonentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentsField, value) != true)) {
                    this.AbonentsField = value;
                    this.RaisePropertyChanged("Abonents");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class DomainListDTO : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.DomainDTO> DomainsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.DomainDTO> Domains {
            get {
                return this.DomainsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainsField, value) != true)) {
                    this.DomainsField = value;
                    this.RaisePropertyChanged("Domains");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherDTOList", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class PublisherDTOList : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.PublisherDTO> PublishersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.PublisherDTO> Publishers {
            get {
                return this.PublishersField;
            }
            set {
                if ((object.ReferenceEquals(this.PublishersField, value) != true)) {
                    this.PublishersField = value;
                    this.RaisePropertyChanged("Publishers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorDTOList", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class AuthorDTOList : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AuthorDTO> AuthorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AuthorDTO> Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportBookPopularityDto", Namespace="http://schemas.datacontract.org/2004/07/LibraryWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class ReportBookPopularityDto : Library.LibraryServiceWCF.HasErrorAndRowCountFieldAnswer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.LibraryServiceWCF.ReportBookPopularity ReportBookPopularityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.LibraryServiceWCF.ReportBookPopularity ReportBookPopularity {
            get {
                return this.ReportBookPopularityField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportBookPopularityField, value) != true)) {
                    this.ReportBookPopularityField = value;
                    this.RaisePropertyChanged("ReportBookPopularity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportBookPopularity", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class ReportBookPopularity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.BookInfoForReport> BookInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.BookInfoForReport> BookInfos {
            get {
                return this.BookInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.BookInfosField, value) != true)) {
                    this.BookInfosField = value;
                    this.RaisePropertyChanged("BookInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstDate {
            get {
                return this.FirstDateField;
            }
            set {
                if ((this.FirstDateField.Equals(value) != true)) {
                    this.FirstDateField = value;
                    this.RaisePropertyChanged("FirstDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastDate {
            get {
                return this.LastDateField;
            }
            set {
                if ((this.LastDateField.Equals(value) != true)) {
                    this.LastDateField = value;
                    this.RaisePropertyChanged("LastDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class BookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountOfFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AuthorDTO> AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.DomainDTO> DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearOfPublicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountOfFree {
            get {
                return this.AmountOfFreeField;
            }
            set {
                if ((this.AmountOfFreeField.Equals(value) != true)) {
                    this.AmountOfFreeField = value;
                    this.RaisePropertyChanged("AmountOfFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Annotation {
            get {
                return this.AnnotationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnotationField, value) != true)) {
                    this.AnnotationField = value;
                    this.RaisePropertyChanged("Annotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.AuthorDTO> Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.Collection<Library.LibraryServiceWCF.DomainDTO> Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearOfPublication {
            get {
                return this.YearOfPublicationField;
            }
            set {
                if ((this.YearOfPublicationField.Equals(value) != true)) {
                    this.YearOfPublicationField = value;
                    this.RaisePropertyChanged("YearOfPublication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class AuthorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class DomainDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBookDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class UserBookDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookAbonentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfReceivingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearOfPublicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Annotation {
            get {
                return this.AnnotationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnotationField, value) != true)) {
                    this.AnnotationField = value;
                    this.RaisePropertyChanged("Annotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookAbonentId {
            get {
                return this.BookAbonentIdField;
            }
            set {
                if ((this.BookAbonentIdField.Equals(value) != true)) {
                    this.BookAbonentIdField = value;
                    this.RaisePropertyChanged("BookAbonentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfReceiving {
            get {
                return this.DateOfReceivingField;
            }
            set {
                if ((this.DateOfReceivingField.Equals(value) != true)) {
                    this.DateOfReceivingField = value;
                    this.RaisePropertyChanged("DateOfReceiving");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearOfPublication {
            get {
                return this.YearOfPublicationField;
            }
            set {
                if ((this.YearOfPublicationField.Equals(value) != true)) {
                    this.YearOfPublicationField = value;
                    this.RaisePropertyChanged("YearOfPublication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbonentDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class AbonentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherDTO", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class PublisherDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookInfoForReport", Namespace="http://schemas.datacontract.org/2004/07/LibraryDAL.Model")]
    [System.SerializableAttribute()]
    public partial class BookInfoForReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountOfTakingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime YearOfPublicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Annotation {
            get {
                return this.AnnotationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnotationField, value) != true)) {
                    this.AnnotationField = value;
                    this.RaisePropertyChanged("Annotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authors {
            get {
                return this.AuthorsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorsField, value) != true)) {
                    this.AuthorsField = value;
                    this.RaisePropertyChanged("Authors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfTaking {
            get {
                return this.CountOfTakingField;
            }
            set {
                if ((this.CountOfTakingField.Equals(value) != true)) {
                    this.CountOfTakingField = value;
                    this.RaisePropertyChanged("CountOfTaking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime YearOfPublication {
            get {
                return this.YearOfPublicationField;
            }
            set {
                if ((this.YearOfPublicationField.Equals(value) != true)) {
                    this.YearOfPublicationField = value;
                    this.RaisePropertyChanged("YearOfPublication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaginationInfo", Namespace="http://schemas.datacontract.org/2004/07/LibraryDAL.Pagination")]
    [System.SerializableAttribute()]
    public partial struct PaginationInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Library.LibraryServiceWCF.SortOrder SortOrderField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromRow {
            get {
                return this.FromRowField;
            }
            set {
                if ((this.FromRowField.Equals(value) != true)) {
                    this.FromRowField = value;
                    this.RaisePropertyChanged("FromRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPropertyName {
            get {
                return this.OrderPropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPropertyNameField, value) != true)) {
                    this.OrderPropertyNameField = value;
                    this.RaisePropertyChanged("OrderPropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Library.LibraryServiceWCF.SortOrder SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrder", Namespace="http://schemas.datacontract.org/2004/07/LibraryDAL.Sorting")]
    public enum SortOrder : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DESC = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookEditingInfo", Namespace="http://schemas.datacontract.org/2004/07/LibraryBLL.DTO")]
    [System.SerializableAttribute()]
    public partial class BookEditingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnnotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearOfPublicationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Annotation {
            get {
                return this.AnnotationField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnotationField, value) != true)) {
                    this.AnnotationField = value;
                    this.RaisePropertyChanged("Annotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearOfPublication {
            get {
                return this.YearOfPublicationField;
            }
            set {
                if ((this.YearOfPublicationField.Equals(value) != true)) {
                    this.YearOfPublicationField = value;
                    this.RaisePropertyChanged("YearOfPublication");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryServiceWCF.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookPopularityReport", ReplyAction="http://tempuri.org/ILibraryService/GetBookPopularityReportResponse")]
        Library.LibraryServiceWCF.ReportBookPopularityDto GetBookPopularityReport(System.DateTime firstDate, System.DateTime lastDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBookPopularityReport", ReplyAction="http://tempuri.org/ILibraryService/GetBookPopularityReportResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.ReportBookPopularityDto> GetBookPopularityReportAsync(System.DateTime firstDate, System.DateTime lastDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksList", ReplyAction="http://tempuri.org/ILibraryService/GetBooksListResponse")]
        Library.LibraryServiceWCF.BookDTOList GetBooksList(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksList", ReplyAction="http://tempuri.org/ILibraryService/GetBooksListResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.BookDTOList> GetBooksListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksOfAbonent", ReplyAction="http://tempuri.org/ILibraryService/GetBooksOfAbonentResponse")]
        Library.LibraryServiceWCF.UserBookDtoList GetBooksOfAbonent(int id, Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetBooksOfAbonent", ReplyAction="http://tempuri.org/ILibraryService/GetBooksOfAbonentResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.UserBookDtoList> GetBooksOfAbonentAsync(int id, Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateBook", ReplyAction="http://tempuri.org/ILibraryService/CreateBookResponse")]
        string CreateBook(Library.LibraryServiceWCF.BookEditingInfo book, int publisherId, System.Collections.ObjectModel.Collection<int> domainIds, System.Collections.ObjectModel.Collection<int> authorIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateBook", ReplyAction="http://tempuri.org/ILibraryService/CreateBookResponse")]
        System.Threading.Tasks.Task<string> CreateBookAsync(Library.LibraryServiceWCF.BookEditingInfo book, int publisherId, System.Collections.ObjectModel.Collection<int> domainIds, System.Collections.ObjectModel.Collection<int> authorIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        string UpdateBook(Library.LibraryServiceWCF.BookEditingInfo book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateBook", ReplyAction="http://tempuri.org/ILibraryService/UpdateBookResponse")]
        System.Threading.Tasks.Task<string> UpdateBookAsync(Library.LibraryServiceWCF.BookEditingInfo book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBook", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookResponse")]
        string DeleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteBook", ReplyAction="http://tempuri.org/ILibraryService/DeleteBookResponse")]
        System.Threading.Tasks.Task<string> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GiveBookToAbonent", ReplyAction="http://tempuri.org/ILibraryService/GiveBookToAbonentResponse")]
        string GiveBookToAbonent(int bookId, int abonentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GiveBookToAbonent", ReplyAction="http://tempuri.org/ILibraryService/GiveBookToAbonentResponse")]
        System.Threading.Tasks.Task<string> GiveBookToAbonentAsync(int bookId, int abonentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReturnBookFromAbonent", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookFromAbonentResponse")]
        string ReturnBookFromAbonent(int bookId, int abonentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReturnBookFromAbonent", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookFromAbonentResponse")]
        System.Threading.Tasks.Task<string> ReturnBookFromAbonentAsync(int bookId, int abonentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddAuthorToBook", ReplyAction="http://tempuri.org/ILibraryService/AddAuthorToBookResponse")]
        string AddAuthorToBook(int authorId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddAuthorToBook", ReplyAction="http://tempuri.org/ILibraryService/AddAuthorToBookResponse")]
        System.Threading.Tasks.Task<string> AddAuthorToBookAsync(int authorId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/RemoveAuthorFromBook", ReplyAction="http://tempuri.org/ILibraryService/RemoveAuthorFromBookResponse")]
        string RemoveAuthorFromBook(int authorId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/RemoveAuthorFromBook", ReplyAction="http://tempuri.org/ILibraryService/RemoveAuthorFromBookResponse")]
        System.Threading.Tasks.Task<string> RemoveAuthorFromBookAsync(int authorId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddDomainToBook", ReplyAction="http://tempuri.org/ILibraryService/AddDomainToBookResponse")]
        string AddDomainToBook(int domainId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/AddDomainToBook", ReplyAction="http://tempuri.org/ILibraryService/AddDomainToBookResponse")]
        System.Threading.Tasks.Task<string> AddDomainToBookAsync(int domainId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/RemoveDomainFromBook", ReplyAction="http://tempuri.org/ILibraryService/RemoveDomainFromBookResponse")]
        string RemoveDomainFromBook(int domainId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/RemoveDomainFromBook", ReplyAction="http://tempuri.org/ILibraryService/RemoveDomainFromBookResponse")]
        System.Threading.Tasks.Task<string> RemoveDomainFromBookAsync(int domainId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ChangePublisher", ReplyAction="http://tempuri.org/ILibraryService/ChangePublisherResponse")]
        string ChangePublisher(int publisherId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ChangePublisher", ReplyAction="http://tempuri.org/ILibraryService/ChangePublisherResponse")]
        System.Threading.Tasks.Task<string> ChangePublisherAsync(int publisherId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAbonentsList", ReplyAction="http://tempuri.org/ILibraryService/GetAbonentsListResponse")]
        Library.LibraryServiceWCF.AbonentDTOList GetAbonentsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAbonentsList", ReplyAction="http://tempuri.org/ILibraryService/GetAbonentsListResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.AbonentDTOList> GetAbonentsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateAbonent", ReplyAction="http://tempuri.org/ILibraryService/CreateAbonentResponse")]
        string CreateAbonent(Library.LibraryServiceWCF.AbonentDTO abonent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateAbonent", ReplyAction="http://tempuri.org/ILibraryService/CreateAbonentResponse")]
        System.Threading.Tasks.Task<string> CreateAbonentAsync(Library.LibraryServiceWCF.AbonentDTO abonent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAbonent", ReplyAction="http://tempuri.org/ILibraryService/UpdateAbonentResponse")]
        string UpdateAbonent(Library.LibraryServiceWCF.AbonentDTO abonent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAbonent", ReplyAction="http://tempuri.org/ILibraryService/UpdateAbonentResponse")]
        System.Threading.Tasks.Task<string> UpdateAbonentAsync(Library.LibraryServiceWCF.AbonentDTO abonent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteAbonent", ReplyAction="http://tempuri.org/ILibraryService/DeleteAbonentResponse")]
        string DeleteAbonent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteAbonent", ReplyAction="http://tempuri.org/ILibraryService/DeleteAbonentResponse")]
        System.Threading.Tasks.Task<string> DeleteAbonentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetDomainsList", ReplyAction="http://tempuri.org/ILibraryService/GetDomainsListResponse")]
        Library.LibraryServiceWCF.DomainListDTO GetDomainsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> domainInBookIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetDomainsList", ReplyAction="http://tempuri.org/ILibraryService/GetDomainsListResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.DomainListDTO> GetDomainsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> domainInBookIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateDomain", ReplyAction="http://tempuri.org/ILibraryService/CreateDomainResponse")]
        string CreateDomain(Library.LibraryServiceWCF.DomainDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateDomain", ReplyAction="http://tempuri.org/ILibraryService/CreateDomainResponse")]
        System.Threading.Tasks.Task<string> CreateDomainAsync(Library.LibraryServiceWCF.DomainDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateDomain", ReplyAction="http://tempuri.org/ILibraryService/UpdateDomainResponse")]
        string UpdateDomain(Library.LibraryServiceWCF.DomainDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateDomain", ReplyAction="http://tempuri.org/ILibraryService/UpdateDomainResponse")]
        System.Threading.Tasks.Task<string> UpdateDomainAsync(Library.LibraryServiceWCF.DomainDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteDomain", ReplyAction="http://tempuri.org/ILibraryService/DeleteDomainResponse")]
        string DeleteDomain(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteDomain", ReplyAction="http://tempuri.org/ILibraryService/DeleteDomainResponse")]
        System.Threading.Tasks.Task<string> DeleteDomainAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetPublishersList", ReplyAction="http://tempuri.org/ILibraryService/GetPublishersListResponse")]
        Library.LibraryServiceWCF.PublisherDTOList GetPublishersList(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetPublishersList", ReplyAction="http://tempuri.org/ILibraryService/GetPublishersListResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.PublisherDTOList> GetPublishersListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreatePublisher", ReplyAction="http://tempuri.org/ILibraryService/CreatePublisherResponse")]
        string CreatePublisher(Library.LibraryServiceWCF.PublisherDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreatePublisher", ReplyAction="http://tempuri.org/ILibraryService/CreatePublisherResponse")]
        System.Threading.Tasks.Task<string> CreatePublisherAsync(Library.LibraryServiceWCF.PublisherDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdatePublisher", ReplyAction="http://tempuri.org/ILibraryService/UpdatePublisherResponse")]
        string UpdatePublisher(Library.LibraryServiceWCF.PublisherDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdatePublisher", ReplyAction="http://tempuri.org/ILibraryService/UpdatePublisherResponse")]
        System.Threading.Tasks.Task<string> UpdatePublisherAsync(Library.LibraryServiceWCF.PublisherDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeletePublisher", ReplyAction="http://tempuri.org/ILibraryService/DeletePublisherResponse")]
        string DeletePublisher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeletePublisher", ReplyAction="http://tempuri.org/ILibraryService/DeletePublisherResponse")]
        System.Threading.Tasks.Task<string> DeletePublisherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthorsList", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorsListResponse")]
        Library.LibraryServiceWCF.AuthorDTOList GetAuthorsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> authorsInBookIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAuthorsList", ReplyAction="http://tempuri.org/ILibraryService/GetAuthorsListResponse")]
        System.Threading.Tasks.Task<Library.LibraryServiceWCF.AuthorDTOList> GetAuthorsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> authorsInBookIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateAuthor", ReplyAction="http://tempuri.org/ILibraryService/CreateAuthorResponse")]
        string CreateAuthor(Library.LibraryServiceWCF.AuthorDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateAuthor", ReplyAction="http://tempuri.org/ILibraryService/CreateAuthorResponse")]
        System.Threading.Tasks.Task<string> CreateAuthorAsync(Library.LibraryServiceWCF.AuthorDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAuthor", ReplyAction="http://tempuri.org/ILibraryService/UpdateAuthorResponse")]
        string UpdateAuthor(Library.LibraryServiceWCF.AuthorDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/UpdateAuthor", ReplyAction="http://tempuri.org/ILibraryService/UpdateAuthorResponse")]
        System.Threading.Tasks.Task<string> UpdateAuthorAsync(Library.LibraryServiceWCF.AuthorDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteAuthor", ReplyAction="http://tempuri.org/ILibraryService/DeleteAuthorResponse")]
        string DeleteAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/DeleteAuthor", ReplyAction="http://tempuri.org/ILibraryService/DeleteAuthorResponse")]
        System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : Library.LibraryServiceWCF.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<Library.LibraryServiceWCF.ILibraryService>, Library.LibraryServiceWCF.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Library.LibraryServiceWCF.ReportBookPopularityDto GetBookPopularityReport(System.DateTime firstDate, System.DateTime lastDate) {
            return base.Channel.GetBookPopularityReport(firstDate, lastDate);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.ReportBookPopularityDto> GetBookPopularityReportAsync(System.DateTime firstDate, System.DateTime lastDate) {
            return base.Channel.GetBookPopularityReportAsync(firstDate, lastDate);
        }
        
        public Library.LibraryServiceWCF.BookDTOList GetBooksList(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetBooksList(paginationInfo);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.BookDTOList> GetBooksListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetBooksListAsync(paginationInfo);
        }
        
        public Library.LibraryServiceWCF.UserBookDtoList GetBooksOfAbonent(int id, Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetBooksOfAbonent(id, paginationInfo);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.UserBookDtoList> GetBooksOfAbonentAsync(int id, Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetBooksOfAbonentAsync(id, paginationInfo);
        }
        
        public string CreateBook(Library.LibraryServiceWCF.BookEditingInfo book, int publisherId, System.Collections.ObjectModel.Collection<int> domainIds, System.Collections.ObjectModel.Collection<int> authorIds) {
            return base.Channel.CreateBook(book, publisherId, domainIds, authorIds);
        }
        
        public System.Threading.Tasks.Task<string> CreateBookAsync(Library.LibraryServiceWCF.BookEditingInfo book, int publisherId, System.Collections.ObjectModel.Collection<int> domainIds, System.Collections.ObjectModel.Collection<int> authorIds) {
            return base.Channel.CreateBookAsync(book, publisherId, domainIds, authorIds);
        }
        
        public string UpdateBook(Library.LibraryServiceWCF.BookEditingInfo book) {
            return base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBookAsync(Library.LibraryServiceWCF.BookEditingInfo book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public string DeleteBook(int id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteBookAsync(int id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public string GiveBookToAbonent(int bookId, int abonentId) {
            return base.Channel.GiveBookToAbonent(bookId, abonentId);
        }
        
        public System.Threading.Tasks.Task<string> GiveBookToAbonentAsync(int bookId, int abonentId) {
            return base.Channel.GiveBookToAbonentAsync(bookId, abonentId);
        }
        
        public string ReturnBookFromAbonent(int bookId, int abonentId) {
            return base.Channel.ReturnBookFromAbonent(bookId, abonentId);
        }
        
        public System.Threading.Tasks.Task<string> ReturnBookFromAbonentAsync(int bookId, int abonentId) {
            return base.Channel.ReturnBookFromAbonentAsync(bookId, abonentId);
        }
        
        public string AddAuthorToBook(int authorId, int bookId) {
            return base.Channel.AddAuthorToBook(authorId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> AddAuthorToBookAsync(int authorId, int bookId) {
            return base.Channel.AddAuthorToBookAsync(authorId, bookId);
        }
        
        public string RemoveAuthorFromBook(int authorId, int bookId) {
            return base.Channel.RemoveAuthorFromBook(authorId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> RemoveAuthorFromBookAsync(int authorId, int bookId) {
            return base.Channel.RemoveAuthorFromBookAsync(authorId, bookId);
        }
        
        public string AddDomainToBook(int domainId, int bookId) {
            return base.Channel.AddDomainToBook(domainId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> AddDomainToBookAsync(int domainId, int bookId) {
            return base.Channel.AddDomainToBookAsync(domainId, bookId);
        }
        
        public string RemoveDomainFromBook(int domainId, int bookId) {
            return base.Channel.RemoveDomainFromBook(domainId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> RemoveDomainFromBookAsync(int domainId, int bookId) {
            return base.Channel.RemoveDomainFromBookAsync(domainId, bookId);
        }
        
        public string ChangePublisher(int publisherId, int bookId) {
            return base.Channel.ChangePublisher(publisherId, bookId);
        }
        
        public System.Threading.Tasks.Task<string> ChangePublisherAsync(int publisherId, int bookId) {
            return base.Channel.ChangePublisherAsync(publisherId, bookId);
        }
        
        public Library.LibraryServiceWCF.AbonentDTOList GetAbonentsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetAbonentsList(paginationInfo);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.AbonentDTOList> GetAbonentsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetAbonentsListAsync(paginationInfo);
        }
        
        public string CreateAbonent(Library.LibraryServiceWCF.AbonentDTO abonent) {
            return base.Channel.CreateAbonent(abonent);
        }
        
        public System.Threading.Tasks.Task<string> CreateAbonentAsync(Library.LibraryServiceWCF.AbonentDTO abonent) {
            return base.Channel.CreateAbonentAsync(abonent);
        }
        
        public string UpdateAbonent(Library.LibraryServiceWCF.AbonentDTO abonent) {
            return base.Channel.UpdateAbonent(abonent);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAbonentAsync(Library.LibraryServiceWCF.AbonentDTO abonent) {
            return base.Channel.UpdateAbonentAsync(abonent);
        }
        
        public string DeleteAbonent(int id) {
            return base.Channel.DeleteAbonent(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAbonentAsync(int id) {
            return base.Channel.DeleteAbonentAsync(id);
        }
        
        public Library.LibraryServiceWCF.DomainListDTO GetDomainsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> domainInBookIds) {
            return base.Channel.GetDomainsList(paginationInfo, domainInBookIds);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.DomainListDTO> GetDomainsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> domainInBookIds) {
            return base.Channel.GetDomainsListAsync(paginationInfo, domainInBookIds);
        }
        
        public string CreateDomain(Library.LibraryServiceWCF.DomainDTO dto) {
            return base.Channel.CreateDomain(dto);
        }
        
        public System.Threading.Tasks.Task<string> CreateDomainAsync(Library.LibraryServiceWCF.DomainDTO dto) {
            return base.Channel.CreateDomainAsync(dto);
        }
        
        public string UpdateDomain(Library.LibraryServiceWCF.DomainDTO dto) {
            return base.Channel.UpdateDomain(dto);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDomainAsync(Library.LibraryServiceWCF.DomainDTO dto) {
            return base.Channel.UpdateDomainAsync(dto);
        }
        
        public string DeleteDomain(int id) {
            return base.Channel.DeleteDomain(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteDomainAsync(int id) {
            return base.Channel.DeleteDomainAsync(id);
        }
        
        public Library.LibraryServiceWCF.PublisherDTOList GetPublishersList(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetPublishersList(paginationInfo);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.PublisherDTOList> GetPublishersListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo) {
            return base.Channel.GetPublishersListAsync(paginationInfo);
        }
        
        public string CreatePublisher(Library.LibraryServiceWCF.PublisherDTO dto) {
            return base.Channel.CreatePublisher(dto);
        }
        
        public System.Threading.Tasks.Task<string> CreatePublisherAsync(Library.LibraryServiceWCF.PublisherDTO dto) {
            return base.Channel.CreatePublisherAsync(dto);
        }
        
        public string UpdatePublisher(Library.LibraryServiceWCF.PublisherDTO dto) {
            return base.Channel.UpdatePublisher(dto);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePublisherAsync(Library.LibraryServiceWCF.PublisherDTO dto) {
            return base.Channel.UpdatePublisherAsync(dto);
        }
        
        public string DeletePublisher(int id) {
            return base.Channel.DeletePublisher(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletePublisherAsync(int id) {
            return base.Channel.DeletePublisherAsync(id);
        }
        
        public Library.LibraryServiceWCF.AuthorDTOList GetAuthorsList(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> authorsInBookIds) {
            return base.Channel.GetAuthorsList(paginationInfo, authorsInBookIds);
        }
        
        public System.Threading.Tasks.Task<Library.LibraryServiceWCF.AuthorDTOList> GetAuthorsListAsync(Library.LibraryServiceWCF.PaginationInfo paginationInfo, System.Collections.ObjectModel.Collection<int> authorsInBookIds) {
            return base.Channel.GetAuthorsListAsync(paginationInfo, authorsInBookIds);
        }
        
        public string CreateAuthor(Library.LibraryServiceWCF.AuthorDTO dto) {
            return base.Channel.CreateAuthor(dto);
        }
        
        public System.Threading.Tasks.Task<string> CreateAuthorAsync(Library.LibraryServiceWCF.AuthorDTO dto) {
            return base.Channel.CreateAuthorAsync(dto);
        }
        
        public string UpdateAuthor(Library.LibraryServiceWCF.AuthorDTO dto) {
            return base.Channel.UpdateAuthor(dto);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAuthorAsync(Library.LibraryServiceWCF.AuthorDTO dto) {
            return base.Channel.UpdateAuthorAsync(dto);
        }
        
        public string DeleteAuthor(int id) {
            return base.Channel.DeleteAuthor(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAuthorAsync(int id) {
            return base.Channel.DeleteAuthorAsync(id);
        }
    }
}
